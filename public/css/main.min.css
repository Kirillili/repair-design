body,html{margin:0;padding:0;border:0;outline:0;vertical-align:baseline;background:0 0}a,abbr,acronym,address,applet,b,big,blockquote,caption,center,cite,code,dd,del,dfn,div,dl,dt,em,fieldset,font,form,h1,h2,h3,h4,h5,h6,i,iframe,img,ins,kbd,label,legend,li,object,ol,p,pre,q,s,samp,small,span,strike,strong,sub,sup,table,tbody,td,tfoot,th,thead,tr,tt,u,ul,var{margin:0;padding:0;border:0;outline:0;font-size:100%;vertical-align:baseline;background:0 0}body{line-height:1;font:14px "Futura Book",sans-serif}ol,ul{list-style:none}blockquote,q{quotes:none}blockquote:after,blockquote:before,q:after,q:before{content:none}:focus{outline:0}ins{text-decoration:none}del{text-decoration:line-through}table{border-collapse:collapse;border-spacing:0}*,:after,:before{-webkit-box-sizing:border-box;box-sizing:border-box}@font-face{font-family:"Futura Book";src:url(../fonts/futura/FuturaBookC.woff) format("woff"),url(../fonts/futura/FuturaBookC.woff2) format("woff");font-weight:400;font-style:normal;font-display:wrap}@font-face{font-family:"Futura Demi";src:url(../fonts/futura/FuturaDemiC.woff) format("woff"),url(../fonts/futura/FuturaDemiC.woff2) format("woff");font-weight:400;font-style:normal;font-display:wrap}.container{width:85%;max-width:1256px;margin:0 auto}.header,.hero::before{left:0;top:0;width:100%}.header{position:fixed;z-index:99;background:#131313;padding:24px 0}.menu{display:-webkit-box;display:-ms-flexbox;display:flex;-webkit-box-pack:justify;-ms-flex-pack:justify;justify-content:space-between;-webkit-box-align:center;-ms-flex-align:center;align-items:center}.logo,.nav__item{text-transform:uppercase}.logo{font-size:15.05 px;color:#e3b873}.nav__item{text-decoration:none;color:#fff;margin-right:35px;-webkit-transition:color .3s;-o-transition:color .3s;transition:color .3s}.nav__item:hover,.phone{color:#e3b873}.contacts__phone{margin-right:45px}.hero{position:relative;display:-webkit-box;display:-ms-flexbox;display:flex;-webkit-box-orient:vertical;-webkit-box-direction:normal;-ms-flex-direction:column;flex-direction:column;-webkit-box-pack:center;-ms-flex-pack:center;justify-content:center;-webkit-box-align:start;-ms-flex-align:start;align-items:flex-start;padding-top:100px;background:#131313 url(../img/hero_bg.jpg) no-repeat center/cover;height:100vh;color:#fff}.hero::before{background:rgba(19,19,19,.7);content:"";position:absolute;height:100%}.hero__content{position:relative;max-width:670px;margin-left:60px}.hero__title{margin-bottom:14px}.hero__text{font-size:22px;max-width:500px;line-height:131%;margin:0 0 42px}.hero__button{margin-right:20px;padding:20px 35px}.hero__instagram{position:absolute;left:0;top:0;max-width:80px;height:100%}.hero__scroll-down{background:#131313;position:absolute;-webkit-box-pack:center;-ms-flex-pack:center;justify-content:center;left:0;bottom:0;min-width:247px;min-height:97px;text-transform:uppercase;color:#fff;text-decoration:none}.hero__scroll-down::after{content:"";background:url(../img/arrow-down.svg) no-repeat center;width:30px;height:30px;border:2px solid #e3b873;border-radius:50%;margin-left:15px}.hero__scroll-down,.instagram,.instagram__link{display:-webkit-box;display:-ms-flexbox;display:flex;-webkit-box-align:center;-ms-flex-align:center;align-items:center}.instagram{background:#131313;-webkit-box-pack:center;-ms-flex-pack:center;justify-content:center}.instagram__link{text-transform:uppercase;text-decoration:none;color:#e3b873;-webkit-transform:rotate(90deg);-ms-transform:rotate(90deg);transform:rotate(90deg);line-height:.8;font-size:15.4px}.instagram__link::after{background:#e3b873;content:"";width:50px;height:1px;margin-left:8px}.title{font:40px/1.4 "Yeseva One",cursive;margin:0;text-transform:uppercase}.title--primary{color:#e3b873}.button{padding:11px 24px;border:0;border-radius:2px;text-transform:uppercase;font-size:13px}.button:hover{cursor:pointer}.button--primary{background:#e3b873;color:#fff;-webkit-box-shadow:0 5px 15px rgba(227,184,115,.2);box-shadow:0 5px 15px rgba(227,184,115,.2);-webkit-transition:-webkit-box-shadow .4s;-o-transition:box-shadow .4s;transition:box-shadow .4s;transition:box-shadow .4s,-webkit-box-shadow .4s}.button--primary:hover{-webkit-box-shadow:none;box-shadow:none}.button--outline{background:0 0;border:1px solid #fff;color:#fff}.label{font-size:15px}.label-light{color:rgba(255,255,255,.5)}.input{background:0 0;border:0;border-bottom:1px solid rgba 54,54,54,.3;font-size:18px;color:#fff;padding:7px 0}.input::-webkit-input-placeholder{color:#fff}.input::-moz-placeholder{color:#fff}.input:-ms-input-placeholder{color:#fff}.input::-ms-input-placeholder{color:#fff}.input::placeholder{color:#fff}.policy__checkbox{opacity:0;visibility:hidden}.policy__checkbox:checked+.policy__label::before{background:#e3b873 url(../img/check.svg) no-repeat center/10px}.modal,.policy__label{display:-webkit-box;display:-ms-flexbox;display:flex;-webkit-box-align:center;-ms-flex-align:center;align-items:center}.policy__label::before{content:"";width:18px;height:18px;border:1px solid #e3b873;border-radius:1px;cursor:pointer;margin-right:9px}.modal{background:rgba(19,19,19,.6);opacity:0;visibility:hidden;position:fixed;z-index:199;left:0;top:0;bottom:0;right:0;width:100%;height:100%;-webkit-box-pack:center;-ms-flex-pack:center;justify-content:center}.modal--visible{opacity:1;visibility:visible}.modal__dialog{position:relative;max-width:509px;background:#131313 url(../img/bg-lines.svg) no-repeat center;padding:33px 49px 27px;color:#fff}.modal__close{position:absolute;right:0;top:0;width:28px;height:28px;background:url(../img/close.svg) no-repeat center;border:0;margin:12px;cursor:pointer}.modal__title{font:19px "Yeseva One",cursive;text-align:center;margin:0 0 34px}.modal__form{display:-webkit-box;display:-ms-flexbox;display:flex;-webkit-box-orient:vertical;-webkit-box-direction:normal;-ms-flex-direction:column;flex-direction:column}.modal__input{margin-bottom:48px}.modal__input:last-of-type{margin-bottom:14px}.modal__policy{margin-bottom:38px}.modal__button{-ms-flex-item-align:end;align-self:flex-end}html{font-size:14px}img{max-width:100%}.section{padding:60px 0}.section-title{text-align:center;text-transform:uppercase;font-family:"Yeseva One",cursive}.section-title__image::after,.section-title__image::before{background:#e3b873;content:"";display:inline-block;vertical-align:text-top;width:32px;height:2px;margin:0 10px}.types__section-title{margin-bottom:28px}.row{display:-webkit-box;display:-ms-flexbox;display:flex;-webkit-box-align:start;-ms-flex-align:start;align-items:flex-start;-webkit-box-pack:justify;-ms-flex-pack:justify;justify-content:space-between}.col{-ms-flex-preferred-size:32%;flex-basis:32%}.card__text{background:#fff;position:relative;margin:-130px auto 0;padding:25px 30px;max-width:330px;-webkit-box-shadow:10px 10px 20px rgba(0,0,0,.03);box-shadow:10px 10px 20px rgba(0,0,0,.03)}.card__title{font:18px "Yeseva One",cursive;margin-top:0;margin-bottom:9.8px}.card__list{padding:0 0 0 14px;font-size:15px;line-height:25px;color:#959595;margin:0 0 35px}.card__pricetag{font:18px "Yeseva One",cursive;background:#e3b873;position:absolute;left:0;bottom:-25px;text-transform:uppercase;color:#fff;padding:17px 36.4px}@media screen and (max-width:1200px){html{font-size:12px}.nav__item{margin-right:14px}}@media screen and (max-width:992px){.hero__instagram,.nav{display:none}.hero__content{margin-left:0}}@media screen and (max-width:570px){.contacts__phone{margin-right:0;color:#fff;text-decoration:none}.contacts__button{display:none}.title{font-size:23px}.hero__scroll-down{display:none}.hero__content{max-width:320px}.hero__text{font-size:18px;margin-bottom:32px}.hero__button{display:block;min-width:320px;margin-bottom:26px}.row{-webkit-box-orient:vertical;-webkit-box-direction:normal;-ms-flex-direction:column;flex-direction:column;-webkit-box-align:center;-ms-flex-align:center;align-items:center}.types__card{margin-bottom:70px}.card__text{margin-left:0}}@media screen and (max-width:520px){.hero__scroll-down{display:none}}
/*# sourceMappingURL=data:application/json;charset=utf-8;base64, */